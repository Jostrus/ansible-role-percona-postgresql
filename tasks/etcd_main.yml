- name: etcd - Execute the shell script
  shell: cat /var/lib/etcd/member/snap/db | grep {{ ansible_default_ipv4.address }}
  ignore_errors: true
  register: result

- name: etcd - Create Array of all Nodes in Group
  set_fact:
    all_nodes: "{{ all_nodes | default([]) + [item] }}"
  with_items: "{{ groups['postgres'] }}"

- name: etcd - Get Group Size
  set_fact:
    host_count: "{{ groups['postgres'] | length }}"

- name: etcd - sum failcount of all nodes
  set_fact: all_fail_count={{ all_fail_count | int + 1 }}
  with_items: "{{ groups['postgres'] }}"
  when: 
    - hostvars[item].result.failed

- name: etcd - bootstrap
  block:
    - name: etcd - Make sure etcd patroni postgresql is stopped
      ansible.builtin.systemd_service:
        state: stopped
        enabled: false
        name: "{{ item }}"
      with_items:
        - etcd
        - patroni
        - postgresql

    - name: etcd -Get Index of Node
      ansible.builtin.set_fact:
        host_index: "{{ item }}"
      with_sequence: start=0 end="{{ host_count | int -1 }}"
      when: groups['postgres'][item | int] == inventory_hostname

    - name: etcd - Build Array of Node Index
      ansible.builtin.set_fact:
        host_array: "{{ host_array | default([]) + [item] }}"
      with_sequence: start=0 end="{{ host_index }}"

    - name: etcd - Set Fact for config Template loop
      ansible.builtin.set_fact:
        etcd_state: new

    - name: etcd - Bootstrap on first Node in Cluster
      block: 
        - name: etcd - Template etcd config
          ansible.builtin.template:
            src: etc_etcd_etcd.conf.yaml
            dest: /etc/etcd/etcd.conf.yaml
            owner: root
            group: root
            mode: '0644'
        - name: etcd - Start etcd on Bootstraped Node
          ansible.builtin.systemd_service:
            state: started
            name: etcd
      when:
        - groups['postgres'][0] == inventory_hostname
    - name: etcd - Include Task to add remaining Nodes
      include_tasks: etcd_bootstrap_add_nodes.yml
      with_sequence: start=1 end="{{ host_count | int -1 }}"
  when: 
    - all_fail_count == host_count

- name: etcd - Configure Node if a new one should join the Cluster
  block: 
    - name: etcd - Check which Node is a new one 
      shell: etcdctl member list --endpoints={{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:2379
      ignore_errors: true
      register: result

    - name: etcd - Create Array of new nodes
      set_fact:
        new_nodes: "{{ new_nodes | default([]) + [item] }}"
      with_items: "{{ groups['postgres'] }}"
      when: 
        - result.failed
        - item == inventory_hostname

    - name: etcd - Get difference all existing Nodes
      set_fact:
        existing_nodes: "{{ all_nodes | difference(new_nodes) }}"
      ignore_errors: true

    - name: etcd - Build Array of Node Index
      ansible.builtin.set_fact:
        host_array: "{{ host_array | default([]) + [item] }}"
      with_sequence: start=0 end="{{ host_count | int -1 }}"
    
    - name: etcd - Include Task to include new Hosts to etcd Cluster
      include_tasks: etcd_add_new_nodes.yml
      when: new_nodes != []

- name: etcd - Configure all Nodes so etcd Config is still managed by Ansible
  ansible.builtin.template:
    src: etc_etcd_etcd.conf.yaml
    dest: /etc/etcd/etcd.conf.yaml
    owner: root
    group: root
    mode: '0644'
  notify: etcd - restart etcd

- name: etcd - make sure etcd is started
  ansible.builtin.systemd_service:
    state: started
    enabled: true
    name: etcd
